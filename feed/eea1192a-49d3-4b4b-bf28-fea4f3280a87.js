define({id:"eea1192a-49d3-4b4b-bf28-fea4f3280a87",title:"总结CSS3新特性(媒体查询篇)",postDate:"2015-07-16 16:58",content:"<p>CSS3的媒体查询是对CSS2<a href=\"http:\/\/www.w3.org/TR/REC-CSS2/media.html\" target=\"_blank\">媒体类型</a>的扩展,完善;</p><p>CSS2的媒体类型仅仅定义了一些设备的关键字,CSS3的媒体查询进一步扩展了如width,height,color等具有取值范围的属性;</p><p>media query 与 media type 的区别在于: media query是一个值或一个范围的值,而media type仅仅是设备的匹配(所以media type 是一个单词,而media query 后边需要跟着一个数值,两者可以混合使用);</p><p>media可用于link标签属性 [media]</p><div class=\"cnblogs_code\"><pre>  <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">link </span><span style=\"color: #ff0000;\">rel</span><span style=\"color: #0000ff;\">=\"stylesheet\"</span><span style=\"color: #ff0000;\"> type</span><span style=\"color: #0000ff;\">=\"text/css\"</span><span style=\"color: #ff0000;\"> href</span><span style=\"color: #0000ff;\">=\"../css/print.css\"</span><span style=\"color: #ff0000;\"> media</span><span style=\"color: #0000ff;\">=\"print and (max-width : 600px)\"</span> <span style=\"color: #0000ff;\">/&gt;</span></pre></div><p>以及css文件内,下边代码均是使用css内media;</p><p><span style=\"line-height: 1.5;\">介绍一下可用的运算符&amp;常用的media type以及media query:</span></p><h2>运算符:</h2><h3>and:</h3><p>and运算符用于符号两边规则均满足条件则匹配</p><div class=\"cnblogs_code\"><pre><span style=\"color: #800000;\">@media screen and (max-width : 600px) </span>{<span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">匹配宽度小于600px的电脑屏幕</span><span style=\"color: #008000;\">*/</span>}</pre></div><p> </p><h3>not:</h3><p>not运算符用于取非,所有不满足该规则的均匹配</p><div class=\"cnblogs_code\"><pre><span style=\"color: #800000;\">@media not print </span>{<span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">匹配除了打印机以外的所有设备</span><span style=\"color: #008000;\">*/</span>}</pre></div><p>使用not时请注意,如果不加括号,也许会产生一些奇怪的现象,例:</p><div class=\"cnblogs_code\"><pre><span style=\"color: #800000;\">@media not all and (max-width : 500px) </span>{}<span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">等价于</span><span style=\"color: #008000;\">*/</span><span style=\"color: #800000;\">@media not (all and (max-width : 500px)) </span>{}<span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">而不是</span><span style=\"color: #008000;\">*/</span><span style=\"color: #800000;\">@media (not all) and (max-width : 500px) </span>{}</pre></div><p>所以,如果要使用not,还是显式的添加括号比较明确点</p><h3>,(逗号):</h3><p>相当于 or 用于两边有一条满足则匹配</p><div class=\"cnblogs_code\"><pre><span style=\"color: #800000;\">@media screen , (min-width : 800px) </span>{<span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">匹配电脑屏幕或者宽度大于800px的设备</span><span style=\"color: #008000;\">*/</span>}</pre></div><p> </p><h2>Media Type(只说几个常用的,其余会给出链接):</h2><h3>All:</h3><p>all是默认值,匹配所有设备;</p><div class=\"cnblogs_code\"><pre><span style=\"color: #800000;\">@media all </span>{<span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">可以过滤不支持media的浏览器</span><span style=\"color: #008000;\">*/</span>}</pre></div><h3>Screen:</h3><p>匹配电脑屏幕;</p><h3>Print:</h3><p>匹配打印机(打印预览时也会匹配)[本人简历专门为print做了一套样式~]</p><p> </p><p>常用的一般就这三个type,其余Media Type 有兴趣的可以看下 <a href=\"http:\/\/www.w3school.com.cn/html5/att_a_media.asp\" target=\"_blank\">W3School的说明</a>或<a href=\"http:\/\/www.w3.org/TR/REC-CSS2/media.html\" target=\"_blank\">W3的文档</a></p><p> </p><h2>Media Query(也是说一些常用的): \/\/需要注意的是,Media Query必须要加括号,一个括号是一个query</h2><h3>max-width(max-height):</h3><div class=\"cnblogs_code\"><pre><span style=\"color: #800000;\">@media (max-width : 600px) </span>{<span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">匹配界面宽度小于600px的设备</span><span style=\"color: #008000;\">*/</span>}</pre></div><h3>min-width(min-height):</h3><div class=\"cnblogs_code\"><pre><span style=\"color: #800000;\">@media (min-width : 400px) </span>{<span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">匹配界面宽度大于400px的设备</span><span style=\"color: #008000;\">*/</span>}</pre></div><h3>max-device-width(max-device-height):</h3><div class=\"cnblogs_code\"><pre><span style=\"color: #800000;\">@media (max-device-width : 800px) </span>{<span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">匹配设备(不是界面)宽度小于800px的设备</span><span style=\"color: #008000;\">*/</span>}</pre></div><h3>min-device-width(min-device-height):</h3><div class=\"cnblogs_code\"><pre><span style=\"color: #800000;\">@media (min-device-width : 600px) </span>{<span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">匹配设备(不是界面)宽度大于600px的设备</span><span style=\"color: #008000;\">*/</span>}</pre></div><p>做移动开发时用device-width/device-height,比较好一点吧,因为有些手机浏览器默认会对页面进行一些缩放,所以按照设备宽高来进行匹配会更接近开发时所期望的效果;</p><p>给出全部的Media Query属性值的链接 <a href=\"http:\/\/www.w3.org/TR/2012/REC-css3-mediaqueries-20120619/\" target=\"_blank\">W3的文档</a> 也可以看看MDN的,有志愿者汉化了 <a href=\"https:\/\/developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Media_queries\" target=\"_blank\">MDN Media Query 文档</a></p><p>media是可以嵌套的:</p><div class=\"cnblogs_code\"><pre><span style=\"color: #800000;\">@media not print </span>{    <span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">通用样式</span><span style=\"color: #008000;\">*/</span><span style=\"color: #ff0000;\">    @media (max-width</span>:<span style=\"color: #0000ff;\">600px) {        </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">此条匹配宽度小于600px的非打印机设备</span><span style=\"color: #008000;\">*/</span>         }<span style=\"color: #800000;\">    @media (min-width:600px) </span>{        <span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">此条匹配宽度大于600px的非打印机设备</span><span style=\"color: #008000;\">*/</span>         }<span style=\"color: #800000;\">}</span></pre></div><p>这样省去了将 not print 写两遍的冗余.这样写也是有一定好处的,因为有些浏览器也许只支持Media Type 而不支持 Media Query- -(不要问我为什么知道,栽过坑)</p><p>Media Query(仅指上边那几个)的值的单位可以是 px em rem (%/vh/vw/vmin/vmax什么的没有试...感觉应该没什么用吧...);</p><p>Media Query是响应式页面的核心,其实说响应式页面就是在不同分辨率下显示不同的效果;</p><p>编写响应式页面CSS时分为从小到大和从大到小(尺寸);</p><p>本人弱弱的推荐从小尺寸开始写的 Media Query 使用 max-系列,大尺寸的反之;</p><p>本文哪里有错误及不足还请大家指出;</p><p> </p>"});